import json


# noinspection PyUnresolvedReferences
def MainPyCompiler(*args) -> int:
    main = '\n'.join([
        '# -*- coding: utf-8 -*-',
        '# Auto-generated by bevyframe, DO NOT EDIT',
        '# Modify `manifest.json` and run `bevyframe main`\n',
        'from bevyframe import *',
        'from environment import environment',
        'from default_logging import default_logging',
        'import models'
    ]) + '\n'
    with open('./manifest.json') as f:
        manifest = json.load(f)
    style = manifest['app']['style']
    if style.startswith('https://') or style.startswith('/'):
        style = f"'{style}'"
    else:
        main += f"import {style}\n"
    main += f"""
with open('./.secret') as f:
    secret = f.read()

app = Frame(
    package="{manifest['app']['package']}",
    secret=secret,
    permissions={manifest['accounts']['permissions']},
    style={style},
    icon="{manifest['app']['icon']}",
    default_network="{manifest['accounts']['default_network']}",
    loginview="{manifest['app']['loginview']}",
    environment=environment,
    cors={manifest['app']['cors']},
)

Database(app, f"sqlite:///{manifest['app']['database_filename']}.db", models.Base)
app.db.create_all()
app.default_logging(default_logging)
app.routes = 
    """.removesuffix('\n    ') + '{\n'

    for route in manifest['app']['routing']:
        main += f"    '{route}': '{manifest['app']['routing'][route]}'\n"
    main += '}'
    main += f"""\n
if __name__ == '__main__':
    app.run(
        port={manifest['development']['port']},
        host='{manifest['development']['host']}',
        debug={manifest['development']['debug']}
    )
    """.removesuffix('    ')

    with open('./main.py', 'w') as f:
        f.write(main)
    return 0
